/*
 * AstroAppRESTAPIsLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.astroapp.models;

import java.util.*;

public class ChartDataBuilder {
    //the instance to build
    private ChartData chartData;

    /**
     * Default constructor to initialize the instance
     */
    public ChartDataBuilder() {
        chartData = new ChartData();
    }

    /**
     * Chart name
     */
    public ChartDataBuilder chartName(String chartName) {
        chartData.setChartName(chartName);
        return this;
    }

    /**
     * Chart Date and Time in YYYY-MM-DDTHH:MM:SS format.
     */
    public ChartDataBuilder chartDate(String chartDate) {
        chartData.setChartDate(chartDate);
        return this;
    }

    /**
     * Geographical Longitude.
     */
    public ChartDataBuilder lng(String lng) {
        chartData.setLng(lng);
        return this;
    }

    /**
     * Geographical latitude.
     */
    public ChartDataBuilder lat(String lat) {
        chartData.setLat(lat);
        return this;
    }

    /**
     * Elevation of the geographical location.
     */
    public ChartDataBuilder elev(int elev) {
        chartData.setElev(elev);
        return this;
    }

    /**
     * Time Zone. You can obtain time zone details by calling the Locations APIs.
     */
    public ChartDataBuilder tz(String tz) {
        chartData.setTz(tz);
        return this;
    }

    /**
     * 100: Tropical Zodiac: 1: Fagan-Bradley Ayanamsa, 2: Lahiri Ayanamsa; 3: Raman Ayanamsa.
     */
    public ChartDataBuilder zodiacID(int zodiacID) {
        chartData.setZodiacID(zodiacID);
        return this;
    }

    /**
     * 1: Placidus; 2: Koch, 3: Porphyrius; 4: Regiomontanus, 20: Whole System.
     */
    public ChartDataBuilder houseSystemID(int houseSystemID) {
        chartData.setHouseSystemID(houseSystemID);
        return this;
    }

    /**
     * G: Geocentric; T: Topocentric; H: Heliocentric.
     */
    public ChartDataBuilder coordSys(String coordSys) {
        chartData.setCoordSys(coordSys);
        return this;
    }

    /**
     * Version of the chart. This may be used by mobile apps that allow editing of the existing charts.
     */
    public ChartDataBuilder version(int version) {
        chartData.setVersion(version);
        return this;
    }

    /**
     * Path to the generated horoscope image on https://astroapp.com servers.
     */
    public ChartDataBuilder imgPath(String imgPath) {
        chartData.setImgPath(imgPath);
        return this;
    }

    /**
     * Julian Date. 0 means the Julian Date is not provided.
     */
    public ChartDataBuilder jd(Double jd) {
        chartData.setJd(jd);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public ChartData build() {
        return chartData;
    }
}